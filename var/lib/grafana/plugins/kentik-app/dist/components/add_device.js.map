{"version":3,"sources":["../../src/components/add_device.js"],"names":["_","angular","defaults","device_name","device_type","device_description","device_flow_type","device_sample_rate","sending_ips","minimize_snmp","device_bgp_type","device_snmp_ip","device_snmp_community","AddDeviceCtrl","$scope","$injector","$location","backendSrv","alertSrv","device","copy","ip","push","index","splice","ips","forEach","join","post","then","resp","set","err","url","templateUrl"],"mappings":";;;;;;;;;;;;;;;AAAOA,O;;AACAC,a;;;;;;;;;;;;;;;;;;;;;AAEHC,c,GAAW;AACbC,qBAAa,EADA;AAEbC,qBAAa,QAFA;AAGbC,4BAAoB,EAHP;AAIbC,0BAAkB,OAJL;AAKbC,4BAAoB,CALP;AAMbC,qBAAa,EANA;AAObC,uBAAe,KAPF;AAQbC,yBAAiB,MARJ;AASbC,wBAAgB,EATH;AAUbC,+BAAuB;AAVV,O;;+BAaFC,a;AACX;AACA,+BAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,SAA/B,EAA0CC,UAA1C,EAAsDC,QAAtD,EAAgE;AAAA;;AAC9D,eAAKD,UAAL,GAAkBA,UAAlB;AACA,eAAKC,QAAL,GAAgBA,QAAhB;AACA,eAAKF,SAAL,GAAiBA,SAAjB;AACA,eAAKG,MAAL,GAAclB,QAAQmB,IAAR,CAAalB,QAAb,CAAd;AACA,eAAKM,WAAL,GAAmB,CAAC,EAACa,IAAI,EAAL,EAAD,CAAnB;AACD;;;;kCAEO;AACN,iBAAKb,WAAL,CAAiBc,IAAjB,CAAsB,EAACD,IAAI,EAAL,EAAtB;AACD;;;mCAEQE,K,EAAO;AACd,iBAAKf,WAAL,CAAiBgB,MAAjB,CAAwBD,KAAxB,EAA+B,CAA/B;AACD;;;sCAEW;AAAA;;AACV,gBAAIE,MAAM,EAAV;AACAzB,cAAE0B,OAAF,CAAU,KAAKlB,WAAf,EAA4B,UAASa,EAAT,EAAa;AACvCI,kBAAIH,IAAJ,CAASD,GAAGA,EAAZ;AACD,aAFD;AAGA,iBAAKF,MAAL,CAAYX,WAAZ,GAA0BiB,IAAIE,IAAJ,EAA1B;AACA,iBAAKV,UAAL,CACGW,IADH,CACQ,4CADR,EACsD,KAAKT,MAD3D,EAEGU,IAFH,CAEQ,gBAAQ;AACZ,kBAAI,SAASC,IAAb,EAAmB;AACjB,sBAAKZ,QAAL,CAAca,GAAd,CAAkB,oBAAlB,EAAwCD,KAAKE,GAA7C,EAAkD,OAAlD;AACD,eAFD,MAEO;AACL,sBAAKhB,SAAL,CAAeiB,GAAf,CAAmB,sCAAnB;AACD;AACF,aARH;AASD;;;;;;;;AAGHpB,oBAAcqB,WAAd,GAA4B,4BAA5B","file":"add_device.js","sourcesContent":["import _ from 'lodash';\nimport angular from 'angular';\n\nvar defaults = {\n  device_name: '',\n  device_type: 'router',\n  device_description: '',\n  device_flow_type: 'sflow',\n  device_sample_rate: 5,\n  sending_ips: '',\n  minimize_snmp: false,\n  device_bgp_type: 'none',\n  device_snmp_ip: '',\n  device_snmp_community: ''\n};\n\nexport class AddDeviceCtrl {\n  /** @ngInject */\n  constructor($scope, $injector, $location, backendSrv, alertSrv) {\n    this.backendSrv = backendSrv;\n    this.alertSrv = alertSrv;\n    this.$location = $location;\n    this.device = angular.copy(defaults);\n    this.sending_ips = [{ip: ''}];\n  }\n\n  addIP() {\n    this.sending_ips.push({ip: ''});\n  }\n\n  removeIP(index) {\n    this.sending_ips.splice(index, 1);\n  }\n\n  addDevice() {\n    var ips = [];\n    _.forEach(this.sending_ips, function(ip) {\n      ips.push(ip.ip);\n    });\n    this.device.sending_ips = ips.join();\n    this.backendSrv\n      .post(\"/api/plugin-proxy/kentik-app/api/v5/device\", this.device)\n      .then(resp => {\n        if ('err' in resp) {\n          this.alertSrv.set(\"Device Add failed.\", resp.err, 'error');\n        } else {\n          this.$location.url(\"/plugins/kentik-app/page/device-list\");\n        }\n      });\n  }\n}\n\nAddDeviceCtrl.templateUrl = 'components/add_device.html';\n"]}