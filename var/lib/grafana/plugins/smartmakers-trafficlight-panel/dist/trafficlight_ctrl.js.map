{"version":3,"sources":["../src/trafficlight_ctrl.js"],"names":["_","MetricsPanelCtrl","kbn","panelDefaults","valueMaps","seriesList","series","bgimage","sensors","height","width","colors","TrafficLightCtrl","$scope","$injector","defaults","panel","events","on","onInitEditMode","bind","render","onDataReceived","dataList","dataListLength","length","push","name","target","value","datapoints","index","splice","xlocation","ylocation","color","size","bordercolor","visible","lastSensor","subItem","format","addEditorTab","scope","elem","attrs","ctrl","$panelContainer","find","pixelStrToNum","str","parseInt","substr","trafficLight","val","undefined","css","sensorsLength","valueMapsLength","sensor","ylocationStr","toString","xlocationStr","sizeStr","valueMap","renderingCompleted","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAOA,a;;AACEC,4B,kBAAAA,gB;;AACFC,e;;;;;;;;;;;;;;;;;;;;;AAEDC,yB,GAAgB;AAClBC,2BAAW,EADO;AAElBC,4BAAY,EAFM;AAGlBC,wBAAQ,EAHU;AAIlBC,yBAAS,EAJS;AAKlBC,yBAAS,EALS;AAMlBC,wBAAQ,OANU;AAOlBC,uBAAO;AAPW,a;AAUhBC,kB,GAAS,CAAC,MAAD,EAAS,KAAT,EAAgB,QAAhB,EAA0B,OAA1B,C;;wCAEFC,gB;;;AAGT,0CAAYC,MAAZ,EAAoBC,SAApB,EAA+B;AAAA;;AAAA,oJACrBD,MADqB,EACbC,SADa;;AAE3Bd,sBAAEe,QAAF,CAAW,MAAKC,KAAhB,EAAuBb,aAAvB;;AAEA,0BAAKc,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,MAAKC,cAAL,CAAoBC,IAApB,OAAjC;AACA,0BAAKH,MAAL,CAAYC,EAAZ,CAAe,mBAAf,EAAoC,MAAKG,MAAL,CAAYD,IAAZ,OAApC;AACA,0BAAKH,MAAL,CAAYC,EAAZ,CAAe,eAAf,EAAgC,MAAKI,cAAL,CAAoBF,IAApB,OAAhC;AACA,0BAAKH,MAAL,CAAYC,EAAZ,CAAe,oBAAf,EAAqC,MAAKI,cAAL,CAAoBF,IAApB,OAArC;AAP2B;AAQ9B;;;;mDAEcG,Q,EAAU;AACrB,4BAAIC,iBAAiBD,SAASE,MAA9B;AACA,6BAAKT,KAAL,CAAWZ,SAAX,GAAuB,EAAvB;AACA,6BAAK,IAAIE,SAAS,CAAlB,EAAqBA,SAASkB,cAA9B,EAA8ClB,QAA9C,EAAwD;AACpD,iCAAKU,KAAL,CAAWZ,SAAX,CAAqBsB,IAArB,CAA0B,EAAEC,MAAMJ,SAASjB,MAAT,EAAiBsB,MAAzB,EAAiCC,OAAON,SAASjB,MAAT,EAAiBwB,UAAjB,CAA4BP,SAASjB,MAAT,EAAiBwB,UAAjB,CAA4BL,MAA5B,GAAqC,CAAjE,EAAoE,CAApE,CAAxC,EAA1B;AACH;;AAED,6BAAKJ,MAAL;AACH;;;iDAEYU,K,EAAO;AAChB,6BAAKf,KAAL,CAAWR,OAAX,CAAmBwB,MAAnB,CAA0BD,KAA1B,EAAiC,CAAjC;AACH;;;gDAEW;AACR,4BAAI,KAAKf,KAAL,CAAWR,OAAX,CAAmBiB,MAAnB,IAA6B,CAAjC,EACI,KAAKT,KAAL,CAAWR,OAAX,CAAmBkB,IAAnB,CAAwB,EAAEC,MAAM,UAAR,EAAoBM,WAAW,GAA/B,EAAoCC,WAAW,GAA/C,EAAoDC,OAAO,MAA3D,EAAmEC,MAAM,EAAzE,EAA6EC,aAAa,OAA1F,EAAmGC,SAAS,IAA5G,EAAxB,EADJ,KAEK;AACD,gCAAIC,aAAa,KAAKvB,KAAL,CAAWR,OAAX,CAAmB,KAAKQ,KAAL,CAAWR,OAAX,CAAmBiB,MAAnB,GAA4B,CAA/C,CAAjB;AACA,iCAAKT,KAAL,CAAWR,OAAX,CAAmBkB,IAAnB,CAAwB,EAAEC,MAAMY,WAAWZ,IAAnB,EAAyBM,WAAW,GAApC,EAAyCC,WAAW,GAApD,EAAyDC,OAAOI,WAAWJ,KAA3E,EAAkFC,MAAMG,WAAWH,IAAnG,EAAyGC,aAAaE,WAAWF,WAAjI,EAA8IC,SAAS,IAAvJ,EAAxB;AACH;AACJ;;;kDAEaE,O,EAAST,K,EAAO;AAC1B,6BAAKf,KAAL,CAAWR,OAAX,CAAmBuB,KAAnB,EAA0BU,MAA1B,GAAmCD,QAAQX,KAA3C;AACH;;;qDAEgB;AACb,6BAAKa,YAAL,CAAkB,SAAlB,EAA6B,2DAA7B,EAA0F,CAA1F;AACH;;;yCAEIC,K,EAAOC,I,EAAMC,K,EAAOC,I,EAAM;AAC3B,4BAAItC,OAAJ;AACA,4BAAIJ,SAAJ;;AAEA,4BAAM2C,kBAAkBH,KAAKI,IAAL,CAAU,kBAAV,CAAxB;;AAEA,iCAASC,aAAT,CAAuBC,GAAvB,EAA4B;AACxB,mCAAOC,SAASD,IAAIE,MAAJ,CAAW,CAAX,EAAcF,IAAIzB,MAAJ,GAAa,CAA3B,CAAT,CAAP;AACH;;AAED,iCAAS4B,YAAT,CAAsBC,GAAtB,EAA2B;AACvB,gCAAInB,QAAQxB,OAAO2C,GAAP,CAAZ;AACA,mCAAOnB,UAAUoB,SAAV,GAAsB5C,OAAO,CAAP,CAAtB,GAAkCwB,KAAzC;AACH;;AAED,iCAASd,MAAT,GAAkB;AACd,gCAAI,CAACyB,KAAK9B,KAAL,CAAWR,OAAhB,EAAyB;AAAE;AAAS;;AAEpC,gCAAIE,QAAQuC,cAAcF,gBAAgBS,GAAhB,CAAoB,OAApB,CAAd,CAAZ;AACA,gCAAI/C,SAASwC,cAAcF,gBAAgBS,GAAhB,CAAoB,QAApB,CAAd,CAAb;;AAEAhD,sCAAUsC,KAAK9B,KAAL,CAAWR,OAArB;AACAJ,wCAAY0C,KAAK9B,KAAL,CAAWZ,SAAvB;;AAEA,gCAAIqD,gBAAgBjD,QAAQiB,MAA5B;AACA,gCAAIiC,kBAAkBtD,UAAUqB,MAAhC;;AAEA,iCAAK,IAAIkC,SAAS,CAAlB,EAAqBA,SAASF,aAA9B,EAA6CE,QAA7C,EAAuD;AACnDnD,wCAAQmD,MAAR,EAAgBrB,OAAhB,GAA0B9B,QAAQmD,MAAR,EAAgB1B,SAAhB,GAA4BvB,KAA5B,IAAqCF,QAAQmD,MAAR,EAAgBzB,SAAhB,GAA4BzB,MAA3F;AACAD,wCAAQmD,MAAR,EAAgBC,YAAhB,GAA+BpD,QAAQmD,MAAR,EAAgBzB,SAAhB,CAA0B2B,QAA1B,KAAuC,IAAtE;AACArD,wCAAQmD,MAAR,EAAgBG,YAAhB,GAA+BtD,QAAQmD,MAAR,EAAgB1B,SAAhB,CAA0B4B,QAA1B,KAAuC,IAAtE;AACArD,wCAAQmD,MAAR,EAAgBI,OAAhB,GAA0BvD,QAAQmD,MAAR,EAAgBvB,IAAhB,CAAqByB,QAArB,KAAkC,IAA5D;AACA,qCAAK,IAAIG,WAAW,CAApB,EAAuBA,WAAWN,eAAlC,EAAmDM,UAAnD,EAA+D;AAC3D,wCAAIxD,QAAQmD,MAAR,EAAgBhC,IAAhB,IAAwBvB,UAAU4D,QAAV,EAAoBrC,IAAhD,EAAsD;AAClDnB,gDAAQmD,MAAR,EAAgBxB,KAAhB,GAAwBkB,aAAajD,UAAU4D,QAAV,EAAoBnC,KAAjC,CAAxB;AACA;AACH;AACJ;AACJ;AACJ;;AAED,6BAAKZ,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,YAAW;AAChCG;AACAyB,iCAAKmB,kBAAL;AACH,yBAHD;AAIH;;;;cAzFiChE,gB;;;;AA4FtCW,6BAAiBsD,WAAjB,GAA+B,aAA/B","file":"trafficlight_ctrl.js","sourcesContent":["import _ from 'lodash';\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport kbn from 'app/core/utils/kbn';\n\nconst panelDefaults = {\n    valueMaps: [],\n    seriesList: [],\n    series: [],\n    bgimage: '',\n    sensors: [],\n    height: '400px',\n    width: '100px'\n};\n\nconst colors = ['grey', 'red', 'yellow', 'green'];\n\nexport class TrafficLightCtrl extends MetricsPanelCtrl {\n\n\n    constructor($scope, $injector) {\n        super($scope, $injector);\n        _.defaults(this.panel, panelDefaults);\n\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n        this.events.on('panel-initialized', this.render.bind(this));\n        this.events.on('data-received', this.onDataReceived.bind(this));\n        this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    }\n\n    onDataReceived(dataList) {\n        var dataListLength = dataList.length;\n        this.panel.valueMaps = [];\n        for (var series = 0; series < dataListLength; series++) {\n            this.panel.valueMaps.push({ name: dataList[series].target, value: dataList[series].datapoints[dataList[series].datapoints.length - 1][0] });\n        }\n\n        this.render();\n    }\n\n    deleteSensor(index) {\n        this.panel.sensors.splice(index, 1);\n    }\n\n    addSensor() {\n        if (this.panel.sensors.length == 0)\n            this.panel.sensors.push({ name: 'A-series', xlocation: 200, ylocation: 200, color: 'grey', size: 40, bordercolor: 'black', visible: true });\n        else {\n            var lastSensor = this.panel.sensors[this.panel.sensors.length - 1];\n            this.panel.sensors.push({ name: lastSensor.name, xlocation: 200, ylocation: 200, color: lastSensor.color, size: lastSensor.size, bordercolor: lastSensor.bordercolor, visible: true });\n        }\n    }\n\n    setUnitFormat(subItem, index) {\n        this.panel.sensors[index].format = subItem.value;\n    }\n\n    onInitEditMode() {\n        this.addEditorTab('Options', 'public/plugins/smartmakers-trafficlight-panel/editor.html', 2);\n    }\n\n    link(scope, elem, attrs, ctrl) {\n        var sensors;\n        var valueMaps;\n\n        const $panelContainer = elem.find('.panel-container');\n\n        function pixelStrToNum(str) {\n            return parseInt(str.substr(0, str.length - 2));\n        }\n\n        function trafficLight(val) {\n            var color = colors[val];\n            return color === undefined ? colors[0] : color;\n        }\n\n        function render() {\n            if (!ctrl.panel.sensors) { return; }\n\n            var width = pixelStrToNum($panelContainer.css(\"width\"));\n            var height = pixelStrToNum($panelContainer.css(\"height\"));\n\n            sensors = ctrl.panel.sensors;\n            valueMaps = ctrl.panel.valueMaps;\n\n            var sensorsLength = sensors.length;\n            var valueMapsLength = valueMaps.length;\n\n            for (var sensor = 0; sensor < sensorsLength; sensor++) {\n                sensors[sensor].visible = sensors[sensor].xlocation < width && sensors[sensor].ylocation < height;\n                sensors[sensor].ylocationStr = sensors[sensor].ylocation.toString() + \"px\";\n                sensors[sensor].xlocationStr = sensors[sensor].xlocation.toString() + \"px\";\n                sensors[sensor].sizeStr = sensors[sensor].size.toString() + \"px\";\n                for (var valueMap = 0; valueMap < valueMapsLength; valueMap++) {\n                    if (sensors[sensor].name == valueMaps[valueMap].name) {\n                        sensors[sensor].color = trafficLight(valueMaps[valueMap].value);\n                        break;\n                    }\n                }\n            }\n        }\n\n        this.events.on('render', function() {\n            render();\n            ctrl.renderingCompleted();\n        });\n    }\n}\n\nTrafficLightCtrl.templateUrl = 'module.html';"]}