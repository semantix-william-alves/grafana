{"version":3,"sources":["../src/datasource.js"],"names":["_","moment","SunCalc","SunAndMoonDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","position","jsonData","_p","metrics","moon_illumination","text","calc","time","getMoonIllumination","fraction","values","moon_altitude","cachedMoonPosition","altitude","Math","PI","moon_azimuth","azimuth","moon_distance","distance","sun_altitude","cachedSunPosition","sun_azimuth","annotations","sunrise","title","tags","sunriseEnd","goldenHourEnd","solarNoon","goldenHour","sunsetStart","sunset","dusk","nauticalDusk","night","nadir","nightEnd","nauticalDawn","dawn","moonrise","moonset","moonPosition","getMoonPosition","latitude","longitude","sunPosition","getPosition","options","from","range","valueOf","to","maxDataPoints","stepInSeconds","targets","map","i","target","series","pick","idx","ceil","metric","cleanCachedPositions","targetSeries","push","add","annotation","query","undefined","split","result","date","sunTimes","getTimes","moonTimes","getMoonTimes","merge","mapKeys","value","key","indexOf","when","res","message"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"./lodash\";\nimport moment from 'moment';\nimport SunCalc from \"./suncalc\";\n\nexport class SunAndMoonDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n\n    // Datasource configuration\n    this.position = instanceSettings.jsonData.position;\n\n    // Configure available metrics\n    var _p = this;\n    this.metrics = {\n      moon_illumination: {\n        text: \"Moon illumination\",\n        calc: function(time) {\n                return SunCalc.getMoonIllumination(time).fraction;\n              },\n        values: []\n      },\n      moon_altitude: {\n        text: \"Moon altitude\",\n        calc: function(time) {\n          return _p.cachedMoonPosition(time).altitude * 180 / Math.PI;\n        },\n        values: []\n      },\n      moon_azimuth: {\n        text: \"Moon azimuth\",\n        calc: function(time) {\n          return _p.cachedMoonPosition(time).azimuth * 180 / Math.PI;\n        },\n        values: []\n      },\n      moon_distance: {\n        text: \"Moon distance\",\n        calc: function(time) { return _p.cachedMoonPosition(time).distance; },\n        values: []\n      },\n      sun_altitude: {\n        text: \"Sun altitude\",\n        calc: function(time) {\n          return _p.cachedSunPosition(time).altitude * 180 / Math.PI;\n        },\n        values: []\n      },\n      sun_azimuth: {\n        text: \"Sun azimuth\",\n        calc: function(time) {\n          return _p.cachedSunPosition(time).azimuth * 180 / Math.PI;\n        },\n        values: []\n      }\n    };\n\n    // Configure annotations\n    this.annotations = {\n      sunrise: {\n        title: \"Sunrise\",\n        text:  \"Top edge of the sun appears on the horizon\",\n        tags:  \"sun\"\n      },\n      sunriseEnd: {\n        title: \"Sunrise ends\",\n        text:  \"Bottom edge of the sun touches the horizon\",\n        tags:  \"sun\"\n      },\n      goldenHourEnd: {\n        title: \"Morning golden hour ends\",\n        text:  \"Soft light, best time for photography\",\n        tags:  \"sun\"\n      },\n      solarNoon: {\n        title: \"Solar noon\",\n        text:  \"Sun is in the highest position\",\n        tags:  \"sun\"\n      },\n      goldenHour: {\n        title: \"Evening golden hour starts\",\n        text:  \"Soft light, best time for photography\",\n        tags:  \"sun\"\n      },\n      sunsetStart: {\n        title: \"Sunset starts\",\n        text:  \"Bottom edge of the sun touches the horizon\",\n        tags:  \"sun\"\n      },\n      sunset: {\n        title: \"Sunset\",\n        text:  \"Sun disappears below the horizon, \" +\n               \"evening civil twilight starts\",\n        tags:  \"sun\"\n      },\n      dusk: {\n        title: \"Dusk\",\n        text:  \"Evening nautical twilight starts\",\n        tags:  \"sun\"\n      },\n      nauticalDusk: {\n        title: \"Nautical dusk\",\n        text:  \"Evening astronomical twilight starts\",\n        tags:  \"sun\"\n      },\n      night: {\n        title: \"Night starts\",\n        text:  \"Dark enough for astronomical observations\",\n        tags:  \"sun\"\n      },\n      nadir: {\n        title: \"Nadir\",\n        text:  \"Darkest moment of the night, sun is in the lowest position\",\n        tags:  \"sun\"\n      },\n      nightEnd: {\n        title: \"Night ends\",\n        text:  \"Morning astronomical twilight starts\",\n        tags:  \"sun\"\n      },\n      nauticalDawn: {\n        title: \"Nautical dawn\",\n        text:  \"Morning nautical twilight starts\",\n        tags:  \"sun\"\n      },\n      dawn: {\n        title: \"Dawn\",\n        text:  \"Morning nautical twilight ends, morning civil twilight starts\",\n        tags:  \"sun\"\n      },\n      moonrise: {\n        title: \"Moonrise\",\n        text:  \"Top edge of the moon appears on the horizon\",\n        tags:  \"moon\"\n      },\n      moonset: {\n        title: \"Moonset\",\n        text:  \"Moon disappears below the horizon\",\n        tags:  \"moon\"\n      }\n    };\n  }\n\n  // Cache values\n  cachedMoonPosition(time) {\n    if (!this.moonPosition)\n      this.moonPosition = SunCalc.getMoonPosition(\n          time, this.position.latitude, this.position.longitude);\n    return this.moonPosition;\n  }\n  cachedSunPosition(time) {\n    if (!this.sunPosition)\n      this.sunPosition = SunCalc.getPosition(\n          time, this.position.latitude, this.position.longitude);\n    return this.sunPosition;\n  }\n  cleanCachedPositions() {\n    this.moonPosition = null;\n    this.sunPosition = null;\n  }\n\n  query(options) {\n    var from = options.range.from.valueOf();\n    var to = options.range.to.valueOf();\n    var maxDataPoints = options.maxDataPoints;\n    var stepInSeconds = (to - from) / maxDataPoints;\n\n    var targets = _.map(options.targets, function(i) { return i.target; });\n\n    // Result map\n    var series = _.pick(this.metrics, targets);\n    for (let idx = 0, time = from; time < to;\n         idx += 1, time += Math.ceil(stepInSeconds)) {\n      for (let metric in series) {\n        series[metric].values[idx] = [series[metric].calc(time), time];\n      }\n      this.cleanCachedPositions();\n    }\n\n    var targetSeries = [];\n    for (let metric in series) {\n      targetSeries.push({\"target\": series[metric].text,\n                         \"datapoints\": series[metric].values});\n    }\n    return {\"data\": targetSeries};\n  }\n\n  annotationQuery(options) {\n    var from = moment(options.range.from);\n    var to = moment(options.range.to).add(1, \"days\");\n    var targets = \"*\";\n    if (options.annotation.query !== undefined)\n      targets = options.annotation.query.split(/\\s*[\\s,]\\s*/);\n\n    var result = [];\n    for (let date = from; date < to; date.add(1, \"days\")) {\n      var sunTimes = SunCalc.getTimes(\n          date, this.position.latitude, this.position.longitude);\n      var moonTimes = SunCalc.getMoonTimes(\n          date, this.position.latitude, this.position.longitude);\n      var values = _.merge({}, sunTimes,\n          _.mapKeys(moonTimes, function(value, key) { return \"moon\" + key; }));\n      for (let value in values) {\n        if (targets != \"*\" && targets.indexOf(value) < 0)\n          continue;\n        result.push({\n          \"annotation\": options.annotation,\n          \"title\": this.annotations[value].title,\n          \"text\": this.annotations[value].text,\n          \"time\": values[value].valueOf(),\n          \"tags\": this.annotations[value].tags,\n        });\n      }\n    }\n    return this.q.when(result);\n  }\n\n  testDatasource() {\n    var res = {};\n    if (this.position.latitude < -90 || this.position.latitude > 90) {\n      res = {\"status\": \"error\", title: \"Error\",\n             message: \"Latitude not in range -+90.\"};\n    } else if (this.position.longitude < -360 ||\n               this.position.longitude > 360) {\n      res = {\"status\": \"error\", title: \"Error\",\n             message: \"Longitude not in range -+360.\"};\n    } else {\n      res = {\"status\": \"success\", title: \"Success\",\n             message: \"Datasource added successfully.\"};\n    }\n    return this.q.when(res);\n  }\n\n  metricFindQuery() {\n    return this.q.when(_.map(this.metrics, (value, key) => {\n      return {text: value.text, value: key};\n    }));\n  }\n}\n"]}