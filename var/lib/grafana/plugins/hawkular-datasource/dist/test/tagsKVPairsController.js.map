{"version":3,"sources":["../../src/tagsKVPairsController.js"],"names":["segmentsToModel","modelToSegments","modelToString","TagsKVPairsController","uiSegmentSrv","datasource","$q","fetchAllTagsCapability","targetSupplier","removeTagsSegment","newSegment","fake","value","segments","tags","push","newPlusButton","segment","$index","type","getTagKeys","then","angular","copy","keys","key","suggestTags","text","transformToSegments","suggestTagKeys","when","index","splice","newKey","newOperator","newKeyValue","i","length","val","name","segmentFactory","reduce","list","tag","variablesHelper","options","map","resolve","join"],"mappings":";;;;;;;;;QA8DgBA,e,GAAAA,e;QAeAC,e,GAAAA,e;QAeAC,a,GAAAA,a;;AA5FhB;;;;;;;;;;IAEaC,qB,WAAAA,qB;AAEX,iCAAYC,YAAZ,EAA0BC,UAA1B,EAAsCC,EAAtC,EAA0CC,sBAA1C,EAAkEC,cAAlE,EAAmF;AAAA;;AACjF,SAAKJ,YAAL,GAAoBA,YAApB;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,EAAL,GAAUA,EAAV;AACA,SAAKC,sBAAL,GAA8BA,sBAA9B;AACA,SAAKC,cAAL,GAAsBA,cAAtB;AACA,SAAKC,iBAAL,GAAyBL,aAAaM,UAAb,CAAwB,EAACC,MAAM,IAAP,EAAaC,OAAO,kBAApB,EAAxB,CAAzB;AACA,SAAKX,eAAL,GAAuBA,eAAvB;AACA,SAAKD,eAAL,GAAuBA,eAAvB;AACD;;;;uCAEkB;AACjB,UAAIa,WAAWZ,gBAAgB,KAAKO,cAAL,GAAsBM,IAAtC,EAA4C,KAAKV,YAAjD,CAAf;AACAS,eAASE,IAAT,CAAc,KAAKX,YAAL,CAAkBY,aAAlB,EAAd;AACA,aAAOH,QAAP;AACD;;;oCAEeA,Q,EAAUI,O,EAASC,M,EAAQ;AAAA;;AACzC,UAAID,QAAQE,IAAR,KAAiB,aAArB,EAAoC;AAClC,eAAO,KAAKC,UAAL,EAAP;AACD,OAFD,MAEO,IAAIH,QAAQE,IAAR,KAAiB,KAArB,EAA6B;AAClC,eAAO,KAAKC,UAAL,GACFC,IADE,CACG;AAAA,kBAASC,QAAQC,IAAR,CAAa,MAAKd,iBAAlB,CAAT,4BAAkDe,IAAlD;AAAA,SADH,CAAP;AAED,OAHM,MAGA,IAAIP,QAAQE,IAAR,KAAiB,OAArB,EAA+B;AACpC,YAAIM,MAAMZ,SAASK,SAAO,CAAhB,EAAmBN,KAA7B;AACA,eAAO,KAAKP,UAAL,CAAgBqB,WAAhB,CAA4B,KAAKlB,cAAL,EAA5B,EAAmDiB,GAAnD,EACJJ,IADI,CACC;AAAA,kBAAS,EAACM,MAAM,IAAP,EAAaf,OAAO,IAApB,EAAT,4BAAuCE,IAAvC;AAAA,SADD,EAEJO,IAFI,CAEC,KAAKjB,YAAL,CAAkBwB,mBAAlB,CAAsC,KAAtC,CAFD,CAAP;AAGD;AACF;;;iCAEY;AACX,UAAI,KAAKrB,sBAAT,EAAiC;AAC/B,eAAO,KAAKF,UAAL,CAAgBwB,cAAhB,CAA+B,KAAKrB,cAAL,EAA/B,EACJa,IADI,CACC,KAAKjB,YAAL,CAAkBwB,mBAAlB,CAAsC,KAAtC,CADD,CAAP;AAED,OAHD,MAGO;AACL,eAAO,KAAKtB,EAAL,CAAQwB,IAAR,CAAa,EAAb,CAAP;AACD;AACF;;;uCAEkBjB,Q,EAAUI,O,EAASc,K,EAAO;AAC3C,UAAId,QAAQL,KAAR,KAAkB,KAAKH,iBAAL,CAAuBG,KAA7C,EAAoD;AAClDC,iBAASmB,MAAT,CAAgBD,KAAhB,EAAuB,CAAvB;AACD,OAFD,MAEO,IAAId,QAAQE,IAAR,KAAiB,aAArB,EAAoC;AACzCN,iBAASmB,MAAT,CAAgBD,KAAhB,EAAuB,CAAvB;AACAlB,iBAASmB,MAAT,CAAgBD,KAAhB,EAAuB,CAAvB,EACE,KAAK3B,YAAL,CAAkB6B,MAAlB,CAAyBhB,QAAQL,KAAjC,CADF,EAEE,KAAKR,YAAL,CAAkB8B,WAAlB,CAA8B,GAA9B,CAFF,EAGE,KAAK9B,YAAL,CAAkB+B,WAAlB,CAA8B,IAA9B,CAHF,EAIE,KAAK/B,YAAL,CAAkB8B,WAAlB,CAA8B,GAA9B,CAJF,EAKE,KAAK9B,YAAL,CAAkBY,aAAlB,EALF;AAMD,OARM,MAQA;AACLH,iBAASkB,KAAT,IAAkBd,OAAlB;AACD;AACD,WAAKT,cAAL,GAAsBM,IAAtB,GAA6Bd,gBAAgBa,QAAhB,CAA7B;AACD;;;;;;AAGI,SAASb,eAAT,CAAyBa,QAAzB,EAAmC;AACxC;AACA,MAAIC,OAAO,EAAX;AACA,OAAK,IAAIsB,IAAI,CAAb,EAAgBA,IAAIvB,SAASwB,MAAT,GAAkB,CAAtC,EAAyCD,KAAK,CAA9C,EAAiD;AAC/C,QAAMX,MAAMZ,SAASuB,CAAT,EAAYxB,KAAxB;AACA,QAAI0B,MAAMzB,SAASuB,IAAE,CAAX,EAAczB,IAAd,GAAqB,GAArB,GAA2BE,SAASuB,IAAE,CAAX,EAAcxB,KAAnD;AACA,QAAI,CAAC0B,GAAD,IAAQA,QAAQ,IAApB,EAA0B;AACxB;AACAA,YAAM,GAAN;AACD;AACDxB,SAAKC,IAAL,CAAU,EAACwB,MAAMd,GAAP,EAAYb,OAAO0B,GAAnB,EAAV;AACD;AACD,SAAOxB,IAAP;AACD;;AAEM,SAASb,eAAT,CAAyBa,IAAzB,EAA+B0B,cAA/B,EAA+C;AACpD;AACA,SAAO,iBAAEC,MAAF,CAAS3B,IAAT,EAAe,UAAC4B,IAAD,EAAOC,GAAP,EAAe;AACjCD,SAAK3B,IAAL,CAAUyB,eAAeP,MAAf,CAAsBU,IAAIJ,IAA1B,CAAV;AACAG,SAAK3B,IAAL,CAAUyB,eAAeN,WAAf,CAA2B,GAA3B,CAAV;AACA,QAAIS,IAAI/B,KAAJ,KAAc,GAAlB,EAAuB;AACrB8B,WAAK3B,IAAL,CAAUyB,eAAeL,WAAf,CAA2B,IAA3B,CAAV;AACD,KAFD,MAEO;AACLO,WAAK3B,IAAL,CAAUyB,eAAeL,WAAf,CAA2BQ,IAAI/B,KAA/B,CAAV;AACD;AACD8B,SAAK3B,IAAL,CAAUyB,eAAeN,WAAf,CAA2B,GAA3B,CAAV;AACA,WAAOQ,IAAP;AACD,GAVI,EAUF,EAVE,CAAP;AAWD;;AAEM,SAASxC,aAAT,CAAuBY,IAAvB,EAA6B8B,eAA7B,EAA8CC,OAA9C,EAAuD;AAC5D,SAAO/B,KAAKgC,GAAL,CAAS,eAAO;AACrB,QAAIlC,cAAJ;AACA,QAAI+B,IAAI/B,KAAJ,KAAc,IAAlB,EAAwB;AACtB;AACAA,cAAQ,GAAR;AACD,KAHD,MAGO,IAAIgC,eAAJ,EAAqB;AAC1BhC,cAAQgC,gBAAgBG,OAAhB,CAAwBJ,IAAI/B,KAA5B,EAAmCiC,OAAnC,EAA4CG,IAA5C,CAAiD,GAAjD,CAAR;AACD,KAFM,MAEA;AACLpC,cAAQ+B,IAAI/B,KAAZ;AACD;AACD,WAAU+B,IAAIJ,IAAd,SAAsB3B,KAAtB;AACD,GAXM,EAWJoC,IAXI,CAWC,GAXD,CAAP;AAYD","file":"tagsKVPairsController.js","sourcesContent":["import _ from 'lodash';\n\nexport class TagsKVPairsController {\n\n  constructor(uiSegmentSrv, datasource, $q, fetchAllTagsCapability, targetSupplier)  {\n    this.uiSegmentSrv = uiSegmentSrv;\n    this.datasource = datasource;\n    this.$q = $q;\n    this.fetchAllTagsCapability = fetchAllTagsCapability;\n    this.targetSupplier = targetSupplier;\n    this.removeTagsSegment = uiSegmentSrv.newSegment({fake: true, value: '-- Remove tag --'});\n    this.modelToSegments = modelToSegments;\n    this.segmentsToModel = segmentsToModel;\n  }\n\n  initTagsSegments() {\n    let segments = modelToSegments(this.targetSupplier().tags, this.uiSegmentSrv);\n    segments.push(this.uiSegmentSrv.newPlusButton());\n    return segments;\n  }\n\n  getTagsSegments(segments, segment, $index) {\n    if (segment.type === 'plus-button') {\n      return this.getTagKeys();\n    } else if (segment.type === 'key')  {\n      return this.getTagKeys()\n          .then(keys => [angular.copy(this.removeTagsSegment), ...keys]);\n    } else if (segment.type === 'value')  {\n      let key = segments[$index-2].value;\n      return this.datasource.suggestTags(this.targetSupplier(), key)\n        .then(tags => [{text: ' *', value: ' *'}, ...tags])\n        .then(this.uiSegmentSrv.transformToSegments(false));\n    }\n  }\n\n  getTagKeys() {\n    if (this.fetchAllTagsCapability) {\n      return this.datasource.suggestTagKeys(this.targetSupplier())\n        .then(this.uiSegmentSrv.transformToSegments(false));\n    } else {\n      return this.$q.when([]);\n    }\n  }\n\n  tagsSegmentChanged(segments, segment, index) {\n    if (segment.value === this.removeTagsSegment.value) {\n      segments.splice(index, 4);\n    } else if (segment.type === 'plus-button') {\n      segments.splice(index, 1);\n      segments.splice(index, 0,\n        this.uiSegmentSrv.newKey(segment.value),\n        this.uiSegmentSrv.newOperator(':'),\n        this.uiSegmentSrv.newKeyValue(' *'),\n        this.uiSegmentSrv.newOperator(','),\n        this.uiSegmentSrv.newPlusButton());\n    } else {\n      segments[index] = segment;\n    }\n    this.targetSupplier().tags = segmentsToModel(segments);\n  }\n}\n\nexport function segmentsToModel(segments) {\n  // or \"serialize\"\n  let tags = [];\n  for (let i = 0; i < segments.length - 2; i += 4) {\n    const key = segments[i].value;\n    let val = segments[i+2].fake ? '*' : segments[i+2].value;\n    if (!val || val === ' *') {\n      // '*' character get a special treatment in grafana so we had to use ' *' instead\n      val = '*';\n    }\n    tags.push({name: key, value: val});\n  }\n  return tags;\n}\n\nexport function modelToSegments(tags, segmentFactory) {\n  // or \"deserialize\"\n  return _.reduce(tags, (list, tag) => {\n      list.push(segmentFactory.newKey(tag.name));\n      list.push(segmentFactory.newOperator(':'));\n      if (tag.value === '*') {\n        list.push(segmentFactory.newKeyValue(' *'));\n      } else {\n        list.push(segmentFactory.newKeyValue(tag.value));\n      }\n      list.push(segmentFactory.newOperator(','));\n      return list;\n    }, []);\n}\n\nexport function modelToString(tags, variablesHelper, options) {\n  return tags.map(tag => {\n    let value;\n    if (tag.value === ' *') {\n      // '*' character get a special treatment in grafana so we had to use ' *' instead\n      value = '*';\n    } else if (variablesHelper) {\n      value = variablesHelper.resolve(tag.value, options).join('|');\n    } else {\n      value = tag.value;\n    }\n    return `${tag.name}:${value}`;\n  }).join(',');\n}\n"]}