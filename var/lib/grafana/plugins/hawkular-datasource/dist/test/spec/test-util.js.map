{"version":3,"sources":["../../../spec/test-util.js"],"names":["expectRequest","expectAlertRequest","expectRequestWithTenant","getSettings","hProtocol","hHostname","hPort","hPath","instanceSettings","url","jsonData","tenant","request","verb","path","expect","method","to","equal","headers","have","property"],"mappings":";;;;;QAWgBA,a,GAAAA,a;QAMAC,kB,GAAAA,kB;QAMAC,uB,GAAAA,uB;QAMAC,W,GAAAA,W;AA7BhB,IAAMC,YAAY,OAAlB;AACA,IAAMC,YAAY,UAAlB;AACA,IAAMC,QAAQ,KAAd;AACA,IAAMC,QAAQ,UAAd;AACA,IAAMC,mBAAmB;AACvBC,OAAQL,SAAR,WAAuBC,SAAvB,SAAoCC,KAApC,SAA6CC,KADtB;AAEvBG,YAAU;AACRC,YAAQ;AADA;AAFa,CAAzB;;AAOO,SAASX,aAAT,CAAuBY,OAAvB,EAAgCC,IAAhC,EAAsCC,IAAtC,EAA4C;AACjDC,SAAOH,QAAQI,MAAf,EAAuBC,EAAvB,CAA0BC,KAA1B,CAAgCL,IAAhC;AACAE,SAAOH,QAAQO,OAAf,EAAwBF,EAAxB,CAA2BG,IAA3B,CAAgCC,QAAhC,CAAyC,iBAAzC,EAA4Db,iBAAiBE,QAAjB,CAA0BC,MAAtF;AACAI,SAAOH,QAAQH,GAAf,EAAoBQ,EAApB,CAAuBC,KAAvB,CAAgCV,iBAAiBC,GAAjD,iBAAgEK,IAAhE;AACD;;AAEM,SAASb,kBAAT,CAA4BW,OAA5B,EAAqCC,IAArC,EAA2CC,IAA3C,EAAiD;AACtDC,SAAOH,QAAQI,MAAf,EAAuBC,EAAvB,CAA0BC,KAA1B,CAAgCL,IAAhC;AACAE,SAAOH,QAAQO,OAAf,EAAwBF,EAAxB,CAA2BG,IAA3B,CAAgCC,QAAhC,CAAyC,iBAAzC,EAA4Db,iBAAiBE,QAAjB,CAA0BC,MAAtF;AACAI,SAAOH,QAAQH,GAAf,EAAoBQ,EAApB,CAAuBC,KAAvB,CAAgCV,iBAAiBC,GAAjD,gBAA+DK,IAA/D;AACD;;AAEM,SAASZ,uBAAT,CAAiCU,OAAjC,EAA0CC,IAA1C,EAAgDC,IAAhD,EAAsDH,MAAtD,EAA8D;AACnEI,SAAOH,QAAQI,MAAf,EAAuBC,EAAvB,CAA0BC,KAA1B,CAAgCL,IAAhC;AACAE,SAAOH,QAAQO,OAAf,EAAwBF,EAAxB,CAA2BG,IAA3B,CAAgCC,QAAhC,CAAyC,iBAAzC,EAA4DV,MAA5D;AACAI,SAAOH,QAAQH,GAAf,EAAoBQ,EAApB,CAAuBC,KAAvB,CAAgCV,iBAAiBC,GAAjD,iBAAgEK,IAAhE;AACD;;AAEM,SAASX,WAAT,GAAuB;AAC5B,SAAOK,gBAAP;AACD","file":"test-util.js","sourcesContent":["const hProtocol = 'https';\nconst hHostname = 'test.com';\nconst hPort = '876';\nconst hPath = 'hawkular';\nconst instanceSettings = {\n  url: `${hProtocol}://${hHostname}:${hPort}/${hPath}`,\n  jsonData: {\n    tenant: 'test-tenant'\n  }\n};\n\nexport function expectRequest(request, verb, path) {\n  expect(request.method).to.equal(verb);\n  expect(request.headers).to.have.property('Hawkular-Tenant', instanceSettings.jsonData.tenant);\n  expect(request.url).to.equal(`${instanceSettings.url}/metrics/${path}`);\n}\n\nexport function expectAlertRequest(request, verb, path) {\n  expect(request.method).to.equal(verb);\n  expect(request.headers).to.have.property('Hawkular-Tenant', instanceSettings.jsonData.tenant);\n  expect(request.url).to.equal(`${instanceSettings.url}/alerts/${path}`);\n}\n\nexport function expectRequestWithTenant(request, verb, path, tenant) {\n  expect(request.method).to.equal(verb);\n  expect(request.headers).to.have.property('Hawkular-Tenant', tenant);\n  expect(request.url).to.equal(`${instanceSettings.url}/metrics/${path}`);\n}\n\nexport function getSettings() {\n  return instanceSettings;\n}\n"]}