{"version":3,"sources":["../src/query_ctrl.js"],"names":["_","QueryCtrl","DalmatinerQueryCtrl","$scope","$injector","uiSegmentSrv","$q","target","collection","newFake","tags","metric","functions","new_tag","newPlusButton","new_func","cssClass","new_metric_part","_getAvailableFunctions","datasource","getSimplifiedQuery","getCollections","getTagKeys","tagKey","getTagValues","_newCondition","_newOperator","index","type","seg","tagKeyValue","value","JSON","parse","resolve","getTagConditions","getTagOperators","Error","parts","slice","prefix","map","getMetrics","html","key","newKey","length","push","fake","refresh","category","newFunc","name","info","_getFunctionOption","text","defaults","spec","s","default","fun","args","splice","from","to","move","funcIndex","argIndex","pop","newSegment","find","_availableFunctions","getFunctions","then","functionsSubMenu","_buildFunctionsDropdown","infos","menu","reduce","memo","newMenuItem","submenu","Object","keys","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import './func_editor';\nimport './metric_segment';\nimport _ from 'lodash';\nimport {QueryCtrl} from 'app/plugins/sdk';\n\nexport class DalmatinerQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, uiSegmentSrv, $q) {\n    super($scope, $injector);\n\n    this.$q = $q;\n    this.uiSegmentSrv = uiSegmentSrv;\n\n    this.target.collection = this.target.collection ||\n      uiSegmentSrv.newFake('select collection');\n    this.target.tags = this.target.tags || [];\n    this.target.metric = this.target.metric || [];\n    this.target.functions = this.target.functions || [];\n    this.new_tag = uiSegmentSrv.newPlusButton();\n    this.new_func = uiSegmentSrv.newPlusButton();\n    this.new_func.cssClass = 'query-part';\n    this.new_metric_part = uiSegmentSrv.newFake('...');\n    this._getAvailableFunctions();\n  }\n\n  /**\n   * Methods used by view\n   * -------------------- */\n\n  getCollapsedText() {\n    return this.datasource.getSimplifiedQuery(this.target);\n  }\n\n  getCollections() {\n    return this.datasource.getCollections();\n  }\n\n  getTagKeys() {\n    return this.datasource.getTagKeys(this.target);\n  }\n\n  getTagValues(tagKey) {\n    return this.datasource.getTagValues(this.target, tagKey);\n  }\n\n  // Get list of supported tag join conditions, first will be used as default\n  getTagConditions() {\n    return [this._newCondition('AND'),\n            this._newCondition('OR')];\n  }\n\n  // Get list of supported tag matching operators, first will be used as default\n  getTagOperators() {\n    return [this._newOperator('='), this._newOperator('!=')];\n  }\n\n  getTagOptionsAt(index) {\n    var seg = this.target.tags[index],\n        {type} = seg,\n        tagKeyValue;\n\n    switch (type) {\n    case ('key'):\n      return this.getTagKeys();\n    case ('value'):\n      tagKeyValue = this.target.tags[index - 2].value;\n      return this.getTagValues(JSON.parse(tagKeyValue));\n    case ('condition'):\n      return this.$q.resolve(this.getTagConditions());\n    case ('operator'):\n      return this.$q.resolve(this.getTagOperators());\n    default:\n      throw new Error('Invalid segment type: ' + type);\n    }\n  }\n\n  getMetricOptionsAt(index) {\n    var metric = this.target.metric,\n        parts = index >= 0 ? metric.slice(0, index) : metric,\n        prefix = _.map(parts, 'value');\n\n    return this.datasource.getMetrics(this.target, prefix);\n  }\n\n  addTag() {\n    var {html, value} = this.new_tag,\n        tags = this.target.tags,\n        key = this.uiSegmentSrv.newKey(value);\n\n    key.html = html;\n    if (tags.length > 0)\n      tags.push(this.getTagConditions()[0]);\n    tags.push(key,\n              this.getTagOperators()[0],\n              {html: '...', value: '...', fake: true, type: 'value'});\n    this.new_tag.value = null;\n    this.new_tag.html = this.uiSegmentSrv.newPlusButton().html;\n    this.refresh();\n  }\n\n  onTagSegmentChange(index) {\n    var seg = this.target.tags[index];\n    if (seg.type === 'key') {\n      this.target.tags[index + 2] =\n        {html: '...', value: '...', fake: true, type: 'value'};\n    }\n    this.refresh();\n  }\n\n  addFunction(category, newFunc) {\n\n    var {functions} = this.target,\n        name = this.new_func.value,\n        info = this._getFunctionOption(category.text, newFunc.value),\n        defaults = _.map(info.spec, function(s) {\n          return s.default || '';\n        });\n\n    functions.push({\n      name: info.name,\n      fun: info.fun,\n      args: defaults,\n      spec: info.spec\n    });\n\n    this.new_func.value = null;\n    this.new_func.html = this.uiSegmentSrv.newPlusButton().html;\n    this.refresh();\n  }\n\n  removeFunction(index) {\n    this.target.functions.splice(index, 1);\n  }\n\n  moveFunction(from, to) {\n    var {functions} = this.target;\n    if (to >= 0 && to < functions.length) {\n      _.move(functions, from, to);\n    }\n  }\n\n  updateFunctionArg(funcIndex, argIndex, value) {\n    var {functions} = this.target;\n    if (functions[funcIndex] && argIndex < functions[funcIndex].args.length) {\n      functions[funcIndex].args[argIndex] = value;\n    }\n  }\n\n  addMetricPart() {\n    var {value} = this.new_metric_part;\n\n    this.target.metric.push({value: value, html: value});\n    this.new_metric_part.value = null;\n    this.new_metric_part.html = '...';\n    this.refresh();\n  }\n\n  onMetricSegmentChange(index) {\n    this.target.metric.splice(index + 1);\n    this.refresh();\n  }\n\n  removeWhereSegment(index) {\n    var {tags} = this.target;\n    tags.splice(index, 4);\n    if (tags.length === 4) { tags.pop(); }\n    this.refresh();\n  }\n\n  /**\n   * Internal function\n   */\n\n  _newCondition(value) {\n    return this.uiSegmentSrv.newSegment({value, html: value, type: 'condition',\n                                         cssClass: 'query-keyword'});\n  }\n\n  _newOperator(value) {\n    return this.uiSegmentSrv.newSegment({value, html: value, type: 'operator',\n                                         cssClass: 'query-segment-operator'});\n  }\n\n  _getFunctionOption(category, name) {\n    return _.find(this._availableFunctions, {category, name});\n  }\n\n  _getAvailableFunctions() {\n    this.datasource.getFunctions()\n      .then(infos => {\n        this.functionsSubMenu = this._buildFunctionsDropdown(infos);\n        this._availableFunctions = infos;\n      });\n  }\n\n  _buildFunctionsDropdown(infos) {\n    let menu =\n      _.reduce(infos, (memo, info) => {\n        let newMenuItem = {text: info.fun, value: info.fun};\n\n        if (memo[info.category]) {\n          memo[info.category].submenu.push(newMenuItem);\n        } else {\n          memo[info.category] = {text: info.category, submenu: [newMenuItem]};\n        }\n        return memo;\n      }, []);\n\n    return Object.keys(menu).map(key => menu[key]);\n  }\n\n};\n\nDalmatinerQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}