{"version":3,"sources":["../src/query_ctrl.js"],"names":[],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './graphite_src/add_graphite_func';\nimport './graphite_src/func_editor';\nimport moment from 'moment';\nimport gfunc from './graphite_src/gfunc';\nimport {Parser} from './graphite_src/parser';\n\nexport class BluefloodDatasourceQueryCtrl extends QueryCtrl {\n\n    constructor($scope, $injector, uiSegmentSrv, templateSrv)  {\n        super($scope, $injector);\n        this.functions = [];\n        this.segments = [];\n        this.uiSegmentSrv = uiSegmentSrv;\n        this.templateSrv = templateSrv;\n        if (this.target) {\n            this.target.target = this.target.target || '';\n            this.parseTarget();\n        }\n    }\n\n    toggleEditorMode() {\n        this.target.textEditor = !this.target.textEditor;\n        this.parseTarget();\n    }\n\n    parseTarget() {\n        this.functions = [];\n        this.segments = [];\n        this.error = null;\n\n        if (this.target.textEditor) {\n            return;\n        }\n\n        var parser = new Parser(this.target.target);\n        var astNode = parser.getAst();\n        if (astNode === null) {\n            this.checkOtherSegments(0);\n            return;\n        }\n\n        if (astNode.type === 'error') {\n            this.error = astNode.message + \" at position: \" + astNode.pos;\n            this.target.textEditor = true;\n            return;\n        }\n\n        try {\n            this.parseTargeRecursive(astNode, null, 0);\n        } catch (err) {\n            console.log('error parsing target:', err.message);\n            this.error = err.message;\n            this.target.textEditor = true;\n        }\n\n        this.checkOtherSegments(this.segments.length - 1);\n    }\n\n    addFunctionParameter(func, value, index, shiftBack) {\n        if (shiftBack) {\n            index = Math.max(index - 1, 0);\n        }\n        func.params[index] = value;\n    }\n\n    parseTargeRecursive(astNode, func, index) {\n        if (astNode === null) {\n            return null;\n        }\n\n        switch (astNode.type) {\n            case 'function':\n                var innerFunc = gfunc.createFuncInstance(astNode.name, { withDefaultParams: false });\n                _.each(astNode.params, (param, index) => {\n                    this.parseTargeRecursive(param, innerFunc, index);\n        });\n\n        innerFunc.updateText();\n        this.functions.push(innerFunc);\n        break;\n    case 'series-ref':\n        this.addFunctionParameter(func, astNode.value, index, this.segments.length > 0);\n        break;\n    case 'bool':\n    case 'string':\n    case 'number':\n        if ((index-1) >= func.def.params.length) {\n            throw { message: 'invalid number of parameters to method ' + func.def.name };\n        }\n        this.addFunctionParameter(func, astNode.value, index, true);\n        break;\n    case 'metric':\n        if (this.segments.length > 0) {\n            if (astNode.segments.length !== 1) {\n                throw { message: 'Multiple metric params not supported, use text editor.' };\n            }\n            this.addFunctionParameter(func, astNode.segments[0].value, index, true);\n            break;\n        }\n\n        this.segments = _.map(astNode.segments, segment => {\n                return this.uiSegmentSrv.newSegment(segment);\n    });\n    }\n    }\n\n    getSegmentPathUpTo(index) {\n        var arr = this.segments.slice(0, index);\n\n        return _.reduce(arr, function(result, segment) {\n            return result ? (result + \".\" + segment.value) : segment.value;\n        }, \"\");\n    }\n\n    checkOtherSegments(fromIndex) {\n        if (fromIndex === 0) {\n            this.segments.push(this.uiSegmentSrv.newSelectMetric());\n            return;\n        }\n\n        var path = this.getSegmentPathUpTo(fromIndex + 1);\n        return this.datasource.metricFindQuery(path).then(segments => {\n                if (segments.length === 0) {\n            if (path !== '') {\n                this.segments = this.segments.splice(0, fromIndex);\n                this.segments.push(this.uiSegmentSrv.newSelectMetric());\n            }\n        } else if (segments[0].expandable) {\n            if (this.segments.length === fromIndex) {\n                this.segments.push(this.uiSegmentSrv.newSelectMetric());\n            } else {\n                return this.checkOtherSegments(fromIndex + 1);\n            }\n        }\n    }).catch(err => {\n            this.error = err.message || 'Failed to issue metric query';\n    });\n    }\n\n    setSegmentFocus(segmentIndex) {\n        _.each(this.segments, (segment, index) => {\n            segment.focus = segmentIndex === index;\n    });\n    }\n\n    wrapFunction(target, func) {\n        return func.render(target);\n    }\n\n    getAltSegments(index) {\n        var query = index === 0 ?  '*' : this.getSegmentPathUpTo(index) + '.*';\n\n        return this.datasource.metricFindQuery(query).then(segments => {\n                var altSegments = _.map(segments, segment => {\n                        return this.uiSegmentSrv.newSegment({ value: segment.text, expandable: segment.expandable });\n    });\n\n        if (altSegments.length === 0) { return altSegments; }\n\n        // add template variables\n        _.each(this.templateSrv.variables, variable => {\n            altSegments.unshift(this.uiSegmentSrv.newSegment({\n            type: 'template',\n            value: '$' + variable.name,\n            expandable: true,\n        }));\n    });\n\n        // add wildcard option\n        altSegments.unshift(this.uiSegmentSrv.newSegment('*'));\n        return altSegments;\n    }).catch(err => {\n            this.error = err.message || 'Failed to issue metric query';\n        return [];\n    });\n    }\n\n    segmentValueChanged(segment, segmentIndex) {\n        this.error = null;\n\n        if (this.functions.length > 0 && this.functions[0].def.fake) {\n            this.functions = [];\n        }\n\n        if (segment.expandable) {\n            return this.checkOtherSegments(segmentIndex + 1).then(() => {\n                    this.setSegmentFocus(segmentIndex + 1);\n            this.targetChanged();\n        });\n        } else {\n            this.segments = this.segments.splice(0, segmentIndex + 1);\n        }\n\n        this.setSegmentFocus(segmentIndex + 1);\n        this.targetChanged();\n    }\n\n    targetTextChanged() {\n        this.parseTarget();\n        this.panelCtrl.refresh();\n    }\n\n    targetChanged() {\n        if (this.error) {\n            return;\n        }\n\n        var oldTarget = this.target.target;\n        var target = this.getSegmentPathUpTo(this.segments.length);\n        this.target.target = _.reduce(this.functions, this.wrapFunction, target);\n\n        if (this.target.target !== oldTarget) {\n            if (this.segments[this.segments.length - 1].value !== 'select metric') {\n                this.panelCtrl.refresh();\n            }\n        }\n    }\n\n    removeFunction(func) {\n        this.functions = _.without(this.functions, func);\n        this.targetChanged();\n    }\n\n    addFunction(funcDef) {\n        var newFunc = gfunc.createFuncInstance(funcDef, { withDefaultParams: true });\n        newFunc.added = true;\n        this.functions.push(newFunc);\n\n        this.moveAliasFuncLast();\n        this.smartlyHandleNewAliasByNode(newFunc);\n\n        if (this.segments.length === 1 && this.segments[0].fake) {\n            this.segments = [];\n        }\n\n        if (!newFunc.params.length && newFunc.added) {\n            this.targetChanged();\n        }\n    }\n\n    moveAliasFuncLast() {\n        var aliasFunc = _.find(this.functions, function(func) {\n            return func.def.name === 'alias' ||\n                func.def.name === 'aliasByNode' ||\n                func.def.name === 'aliasByMetric';\n        });\n\n        if (aliasFunc) {\n            this.functions = _.without(this.functions, aliasFunc);\n            this.functions.push(aliasFunc);\n        }\n    }\n\n    smartlyHandleNewAliasByNode(func) {\n        if (func.def.name !== 'aliasByNode') {\n            return;\n        }\n\n        for (var i = 0; i < this.segments.length; i++) {\n            if (this.segments[i].value.indexOf('*') >= 0)  {\n                func.params[0] = i;\n                func.added = false;\n                this.targetChanged();\n                return;\n            }\n        }\n    }\n\n}\n\nBluefloodDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}