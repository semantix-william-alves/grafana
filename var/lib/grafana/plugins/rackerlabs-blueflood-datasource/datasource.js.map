{"version":3,"sources":["../src/datasource.js"],"names":[],"mappings":"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","file":"datasource.js","sourcesContent":["///<reference path=\"../../../headers/common.d.ts\" />\n\nimport angular from 'angular';\nimport _ from 'lodash';\nimport moment from 'moment';\n\nimport * as dateMath from 'app/core/utils/datemath';\n\n/** @ngInject */\nexport class BluefloodDatasource {\n    constructor(instanceSettings, $q, backendSrv, templateSrv) {\n        this.url = instanceSettings.url;\n        this.name = instanceSettings.name;\n        this.render_method = instanceSettings.render_method || 'POST';\n        this._seriesRefLetters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        this.$q= $q;\n        this.backendSrv = backendSrv;\n        this.templateSrv = templateSrv;\n    }\n\n    query(options) {\n        var graphOptions = {\n            from: this.translateTime(options.rangeRaw.from, false),\n            until: this.translateTime(options.rangeRaw.to, true),\n            targets: options.targets,\n            format: options.format,\n            cacheTimeout: options.cacheTimeout || this.cacheTimeout,\n            maxDataPoints: options.maxDataPoints,\n        };\n\n        var params = this.buildGraphiteParams(graphOptions, options.scopedVars);\n        if (params.length === 0) {\n            return this.$q.when({data: []});\n        }\n\n        if (options.format === 'png') {\n            return this.$q.when({data: this.url + '/render' + '?' + params.join('&')});\n        }\n\n        var httpOptions = {method: this.render_method, url: '/render'};\n\n        if (httpOptions.method === 'GET') {\n            httpOptions.url = httpOptions.url + '?' + params.join('&');\n        } else {\n            httpOptions.data = params.join('&');\n            httpOptions.headers = { 'Content-Type': 'application/x-www-form-urlencoded' };\n        }\n\n        return this.doGraphiteRequest(httpOptions).then(this.convertDataPointsToMs);\n    }\n\n    convertDataPointsToMs(result) {\n        if (!result || !result.data) { return []; }\n        for (var i = 0; i < result.data.length; i++) {\n            var series = result.data[i];\n            for (var y = 0; y < series.datapoints.length; y++) {\n                series.datapoints[y][1] *= 1000;\n            }\n        }\n        return result;\n    };\n\n    annotationQuery(options) {\n        // Graphite metric as annotation\n        if (options.annotation.target) {\n            var target = this.templateSrv.replace(options.annotation.target, {}, 'glob');\n            var graphiteQuery = {\n                rangeRaw: options.rangeRaw,\n                targets: [{ target: target }],\n                format: 'json',\n                maxDataPoints: 100\n            };\n\n            return this.query(graphiteQuery).then(function(result) {\n                var list = [];\n\n                for (var i = 0; i < result.data.length; i++) {\n                    var target = result.data[i];\n\n                    for (var y = 0; y < target.datapoints.length; y++) {\n                        var datapoint = target.datapoints[y];\n                        if (!datapoint[0]) { continue; }\n\n                        list.push({\n                            annotation: options.annotation,\n                            time: datapoint[1],\n                            title: target.target\n                        });\n                    }\n                }\n\n                return list;\n            });\n        } else {\n            // Graphite event as annotation\n            var tags = this.templateSrv.replace(options.annotation.tags);\n            return this.events({range: options.rangeRaw, tags: tags}).then(function(results) {\n                var list = [];\n                for (var i = 0; i < results.data.length; i++) {\n                    var e = results.data[i];\n\n                    list.push({\n                        annotation: options.annotation,\n                        time: e.when * 1000,\n                        title: e.what,\n                        tags: e.tags,\n                        text: e.data\n                    });\n                }\n                return list;\n            });\n        }\n    };\n\n    events(options) {\n        try {\n            var tags = '';\n            if (options.tags) {\n                tags = '&tags=' + options.tags;\n            }\n\n            return this.doGraphiteRequest({\n                method: 'GET',\n                url: '/events/get_data?from=' + this.translateTime(options.range.from, false) +\n                '&until=' + this.translateTime(options.range.to, true) + tags,\n            });\n        } catch (err) {\n            return this.$q.reject(err);\n        }\n    };\n\n    translateTime(date, roundUp) {\n        if (_.isString(date)) {\n            if (date === 'now') {\n                return 'now';\n            } else if (date.indexOf('now-') >= 0 && date.indexOf('/') === -1) {\n                date = date.substring(3);\n                date = date.replace('m', 'min');\n                date = date.replace('M', 'mon');\n                return date;\n            }\n            date = dateMath.parse(date, roundUp);\n        }\n\n        // graphite' s from filter is exclusive\n        // here we step back one minute in order\n        // to guarantee that we get all the data that\n        // exists for the specified range\n        if (roundUp) {\n            if (date.get('s')) {\n                date.add(1, 'm');\n            }\n        } else if (roundUp === false) {\n            if (date.get('s')) {\n                date.subtract(1, 'm');\n            }\n        }\n\n        return date.unix();\n    };\n\n    metricFindQuery(query) {\n        var interpolated;\n        try {\n            interpolated = encodeURIComponent(this.templateSrv.replace(query));\n        } catch (err) {\n            return this.$q.reject(err);\n        }\n\n        return this.doGraphiteRequest({method: 'GET', url: '/metrics/find/?query=' + interpolated })\n            .then(function(results) {\n                return _.map(results.data, function(metric) {\n                    return {\n                        text: metric.text,\n                        expandable: metric.expandable ? true : false\n                    };\n                });\n            });\n    };\n\n    testDatasource() {\n        return this.metricFindQuery('*').then(function () {\n            return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n        });\n    };\n\n    listDashboards(query) {\n        return this.doGraphiteRequest({ method: 'GET',  url: '/dashboard/find/', params: {query: query || ''} })\n            .then(function(results) {\n                return results.data.dashboards;\n            });\n    };\n\n    loadDashboard(dashName) {\n        return this.doGraphiteRequest({method: 'GET', url: '/dashboard/load/' + encodeURIComponent(dashName) });\n    };\n\n    doGraphiteRequest(options) {\n        options.url = this.url + options.url;\n        options.inspect = { type: 'graphite' };\n\n        return this.backendSrv.datasourceRequest(options);\n    };\n\n    buildGraphiteParams(options, scopedVars) {\n        var graphite_options = ['from', 'until', 'rawData', 'format', 'maxDataPoints', 'cacheTimeout'];\n        var clean_options = [], targets = {};\n        var target, targetValue, i;\n        var regex = /\\#([A-Z])/g;\n        var intervalFormatFixRegex = /'(\\d+)m'/gi;\n        var hasTargets = false;\n\n        if (options.format !== 'png') {\n            options['format'] = 'json';\n        }\n\n        function fixIntervalFormat(match) {\n            return match.replace('m', 'min').replace('M', 'mon');\n        }\n\n        for (i = 0; i < options.targets.length; i++) {\n            target = options.targets[i];\n            if (!target.target) {\n                continue;\n            }\n\n            if (!target.refId) {\n                target.refId = this._seriesRefLetters[i];\n            }\n\n            targetValue = this.templateSrv.replace(target.target, scopedVars);\n            targetValue = targetValue.replace(intervalFormatFixRegex, fixIntervalFormat);\n            targets[target.refId] = targetValue;\n        }\n\n        function nestedSeriesRegexReplacer(match, g1) {\n            return targets[g1];\n        }\n\n        for (i = 0; i < options.targets.length; i++) {\n            target = options.targets[i];\n            if (!target.target) {\n                continue;\n            }\n\n            targetValue = targets[target.refId];\n            targetValue = targetValue.replace(regex, nestedSeriesRegexReplacer);\n            targets[target.refId] = targetValue;\n\n            if (!target.hide) {\n                hasTargets = true;\n                clean_options.push(\"target=\" + encodeURIComponent(targetValue));\n            }\n        }\n\n        _.each(options, function (value, key) {\n            if (_.indexOf(graphite_options, key) === -1) { return; }\n            if (value) {\n                clean_options.push(key + \"=\" + encodeURIComponent(value));\n            }\n        });\n\n        if (!hasTargets) {\n            return [];\n        }\n\n        return clean_options;\n    };\n}"]}