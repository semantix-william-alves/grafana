{"version":3,"sources":["../src/datasource.js"],"names":["_","PNPDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","withCredentials","basicAuth","DEFAULT_HOST","DEFAULT_SERVICE","DEFAULT_PERFLABEL","options","query","buildQueryParameters","targets","filter","t","hide","host","service","perflabel","length","when","data","start","Number","range","from","toDate","getTime","toFixed","end","to","x","target","_fixup_regex","This","requestOptions","_requestOptions","method","headers","datasourceRequest","then","result","dataQueryMapper","k","res","alias","scopedVars","tag_host","value","tag_service","tag_perflabel","tag_label","replace","datapoints","y","pop","fill","undefined","factor","eval","NaN","push","matches","match","values","split","join","response","status","message","title","query_string","shift","toLowerCase","Error","op","val","metricFindData","prependVariables","mapper","mapToTextValueHost","mapToTextValueService","mapToTextValuePerflabel","variables","unshift","text","map","hosts","d","i","services","servicedesc","labels","label","refId","Authorization"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\n\nexport class PNPDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.withCredentials = instanceSettings.withCredentials;\n    this.basicAuth = instanceSettings.basicAuth;\n\n    this.DEFAULT_HOST = \"select host\";\n    this.DEFAULT_SERVICE = \"select service\";\n    this.DEFAULT_PERFLABEL = \"select performance label\";\n  }\n\n  /* fetch pnp rrd data */\n  query(options) {\n    var query = this.buildQueryParameters(options);\n    query.targets = query.targets.filter(t => !t.hide);\n    query.targets = query.targets.filter(t => t.host);      /* hide querys without a host filter */\n    query.targets = query.targets.filter(t => t.service);   /* hide querys without a service filter */\n    query.targets = query.targets.filter(t => t.perflabel); /* hide querys without a perflabel filter */\n\n    if(query.targets.length <= 0) {\n      return this.q.when({data: []});\n    }\n\n    query.start = Number(options.range.from.toDate().getTime() / 1000).toFixed();\n    query.end   = Number(options.range.to.toDate().getTime() / 1000).toFixed();\n\n    /* fixup regex syntax in query targets */\n    for(var x=0; x<query.targets.length; x++) {\n      var target = query.targets[x];\n      if(target.host      == this.DEFAULT_HOST)      { target.host      = '' }\n      if(target.service   == this.DEFAULT_SERVICE)   { target.service   = '' }\n      if(target.perflabel == this.DEFAULT_PERFLABEL) { target.perflabel = '' }\n\n      target.host      = this._fixup_regex(target.host);\n      target.service   = this._fixup_regex(target.service);\n      target.perflabel = this._fixup_regex(target.perflabel);\n    }\n\n    var This = this;\n    var requestOptions = this._requestOptions({\n      url: this.url + '/index.php/api/metrics',\n      data: query,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    });\n    return this.backendSrv.datasourceRequest(requestOptions)\n                          .then(function(result) {\n                            return(This.dataQueryMapper(result, options))\n                          });\n  }\n\n  /* maps the result data from pnp into grafana data format */\n  dataQueryMapper(result, options) {\n    var data = {data:[]};\n    if(!result || !result.data || !result.data.targets) {\n        return(data);\n    }\n    for(var x=0; x < result.data.targets.length; x++) {\n      for(var k=0; k < result.data.targets[x].length; k++) {\n        var target = options.targets[x];\n        var res    = result.data.targets[x][k];\n        var alias = target.perflabel;\n        if(target.alias) {\n          alias = target.alias;\n          var scopedVars = {\n            tag_host      : {value: res.host},\n            tag_service   : {value: res.service},\n            tag_perflabel : {value: res.perflabel},\n            tag_label     : {value: res.perflabel}\n          };\n          alias = this.templateSrv.replace(alias, scopedVars);\n        }\n        var datapoints = res.datapoints;\n        var length     = datapoints.length;\n        // remove the last few \"null\" values from the series because the last value is quite often null\n        // and would break current value in legend tables\n        for(var y=1; y < 5; y++) {\n          if(length > y && datapoints[length-y][0] === null) {\n            datapoints.pop();\n          } else {\n            break;\n          }\n        }\n        var length = datapoints.length;\n        var fill   = options.targets[x].fill;\n        if(fill != \"fill\") {\n          if(fill == \"zero\") { fill = 0; }\n          if(fill == \"gap\")  { fill = undefined; }\n          for(var y=0; y<length; y++) {\n            if(datapoints[y][0] === null) {\n              datapoints[y][0] = fill;\n            }\n          }\n        }\n        if(options.targets[x].factor && options.targets[x].factor != \"\") {\n          var factor = eval(options.targets[x].factor);\n          if(factor != NaN && factor != 1) {\n            for(var y=0; y<length; y++) {\n              if(datapoints[y][0] !== null) {\n                datapoints[y][0] *= factor;\n              }\n            }\n          }\n        }\n        data.data.push({\n          \"target\": alias,\n          \"datapoints\": datapoints\n        });\n      }\n    }\n    return(data);\n  }\n\n  /* convert list selection into regular expression\n   * in:  /^{a,b,c}$/\n   * out: /^(a|b|c)$/\n   */\n  _fixup_regex(value) {\n    if(value == undefined || value == null) {\n      return value;\n    }\n    var matches = value.match(/^\\/?\\^?\\{(.*)\\}\\$?\\/?$/);\n    if(!matches) { return(value); }\n    var values = matches[1].split(/,/);\n    for(var x = 0; x < values.length; x++) {\n      values[x] = values[x].replace(/\\//, '\\\\/');\n    }\n    return('/^('+values.join('|')+')$/');\n  }\n\n  testDatasource() {\n    var requestOptions = this._requestOptions({\n      url: this.url + '/index.php/api',\n      method: 'GET'\n    });\n    return this.backendSrv.datasourceRequest(requestOptions)\n      .then(response => {\n        if (response.status === 200) {\n          return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n        }\n      });\n  }\n\n  /* called from the dashboard templating engine to fill template variables\n   * parses simple statements into proper data requests\n   * query syntax: <type> [where <expr>]\n   * ex.: host\n   * ex.: service where host = localhost\n   * ex.: label where host = localhost and service = ping\n   */\n  metricFindQuery(query_string) {\n    var This = this;\n    var type;\n    var options = {};\n    var query = query_string.split(/\\s+/);\n    if(query[0]) {\n      type = query.shift().replace(/s$/, \"\");\n    }\n    // parse simple where statements\n    if(query[0] != undefined) {\n      if(query[0].toLowerCase() != \"where\") {\n        throw new Error(\"query syntax error, expecting WHERE\");\n      }\n      query.shift();\n\n      while(query.length >= 3) {\n        var t   = query.shift().toLowerCase();\n        var op  = query.shift().toLowerCase();\n        var val = query.shift();\n        if(op != \"=\") {\n          throw new Error(\"query syntax error, operator must be '='\");\n        }\n        options[t] = val;\n\n        if(query[0] != undefined) {\n          if(query[0].toLowerCase() == 'and') {\n            query.shift();\n          } else {\n            throw new Error(\"query syntax error, expecting AND\");\n          }\n        }\n      }\n\n      // still remaining filters?\n      if(query.length > 0) {\n        throw new Error(\"query syntax error\");\n      }\n    }\n    return(This.metricFindData(type, options, false));\n  }\n\n  /* used from the query editor to get lists of objects of given type */\n  metricFindData(type, options, prependVariables) {\n    var This = this;\n    var mapper;\n    var url;\n    var data = {};\n    if(type == \"host\") {\n      url          = This.url + '/index.php/api/hosts';\n      mapper       = This.mapToTextValueHost;\n    }\n    else if(type == \"service\") {\n      url          = This.url + '/index.php/api/services/';\n      data.host    = This._fixup_regex(This.templateSrv.replace(options.host));\n      mapper       = This.mapToTextValueService;\n      if(!data.host) { data.host = '/.*/'; }\n    }\n    else if(type == \"perflabel\" || type == \"label\") {\n      url          = This.url + '/index.php/api/labels/';\n      data.host    = This._fixup_regex(This.templateSrv.replace(options.host));\n      data.service = This._fixup_regex(This.templateSrv.replace(options.service));\n      mapper       = This.mapToTextValuePerflabel;\n      if(!data.host)    { data.host    = '/.*/'; }\n      if(!data.service) { data.service = '/.*/'; }\n    }\n\n    if(url == undefined) {\n      throw new Error(\"query syntax error, got no url, unknown type: \"+type);\n    }\n\n    var requestOptions = This._requestOptions({\n      url:     url,\n      data:    data,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    });\n    return This.backendSrv.datasourceRequest(requestOptions)\n      .then(mapper)\n      .then(function(data) {\n        /* prepend templating variables */\n        if(prependVariables) {\n          for(var x=0; x<This.templateSrv.variables.length; x++) {\n            data.unshift({ text:  '/^$'+This.templateSrv.variables[x].name+'$/',\n                           value: '/^$'+This.templateSrv.variables[x].name+'$/' });\n          }\n        }\n        return(data);\n      });\n  }\n\n  mapToTextValueHost(result) {\n    return _.map(result.data.hosts, (d, i) => {\n      return { text: d.name, value: d.name };\n    });\n  }\n\n  mapToTextValueService(result) {\n    return _.map(result.data.services, (d, i) => {\n      return { text: (d.servicedesc || d.name), value: d.name };\n    });\n  }\n\n  mapToTextValuePerflabel(result) {\n    return _.map(result.data.labels, (d, i) => {\n      return { text: (d.label || d.name), value: (d.label || d.name) };\n    });\n  }\n\n  buildQueryParameters(options) {\n    //remove placeholder targets\n    options.targets = _.filter(options.targets, target => {\n      return target.host !== this.DEFAULT_HOST;\n    });\n    options.targets = _.filter(options.targets, target => {\n      return target.service !== this.DEFAULT_SERVICE;\n    });\n    options.targets = _.filter(options.targets, target => {\n      return target.perflabel !== this.DEFAULT_PERFLABEL;\n    });\n    var targets = _.map(options.targets, target => {\n      return {\n        host: this.templateSrv.replace(this.templateSrv.replace(target.host, options.scopedVars)),\n        service: this.templateSrv.replace(this.templateSrv.replace(target.service, options.scopedVars)),\n        perflabel: this.templateSrv.replace(this.templateSrv.replace(target.perflabel, options.scopedVars)),\n        alias: this.templateSrv.replace(this.templateSrv.replace(target.alias, options.scopedVars)),\n        type: this.templateSrv.replace(this.templateSrv.replace(target.type, options.scopedVars)),\n        fill: this.templateSrv.replace(this.templateSrv.replace(target.fill, options.scopedVars)),\n        factor: this.templateSrv.replace(this.templateSrv.replace(target.factor, options.scopedVars)),\n        refId: target.refId,\n        hide: target.hide\n      };\n    });\n\n    options.targets = targets;\n\n    return options;\n  }\n\n  _requestOptions(options) {\n    options = options || {};\n    options.headers = options.headers || {};\n    if(this.basicAuth || this.withCredentials) {\n      options.withCredentials = true;\n    }\n    if(this.basicAuth) {\n      options.headers.Authorization = this.basicAuth;\n    }\n    return(options);\n  }\n}\n"]}