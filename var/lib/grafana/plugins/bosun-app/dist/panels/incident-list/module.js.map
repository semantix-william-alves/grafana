{"version":3,"sources":["../../../src/panels/incident-list/module.js"],"names":[],"mappings":"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","file":"module.js","sourcesContent":["import _ from 'lodash';\nimport moment from 'moment';\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport { bosunIncidentListPanelEditor } from './editor';\n\nvar statusMap = {\n    \"normal\": 0,\n    \"warning\": 1,\n    \"critical\": 2,\n    \"unknown\": 3\n}\n\nexport class BosunIncidentListCtrl extends MetricsPanelCtrl {\n    constructor($scope, $injector, $rootScope, $window, datasourceSrv, templateSrv, utilSrv, backendSrv, dashboardSrv) {\n        super($scope, $injector);\n        var self = this;\n        this.panelCtrl = $scope.ctrl;\n        this.datasourceSrv = datasourceSrv;\n        this.$window = $window;\n        this.templateSrv = templateSrv;\n        this.$rootScope = $rootScope;\n        this.linkUrl = \"\";\n        this.incidentList = [];\n        this.refreshData = this.refreshData.bind(this);\n        this.refreshData();\n        this.utilSrv = utilSrv;\n        this.bodyHTML = \"\";\n        this.reversedFields = {};\n        this.showHelp = 0;\n        this.storeId = dashboardSrv.getCurrent().id + \"-\" + this.panel.id;\n        backendSrv.get('/api/user').then(user => {\n            this.user = user;\n        });\n        this.datasourceSrv.get(this.panel.datasource).then(datasource => {\n            this.preRelease = datasource.preRelease;\n        });\n    }\n\n    onInitMetricsPanelEditMode() {\n        this.addEditorTab('Options', bosunIncidentListPanelEditor, 2);\n    }\n\n    refresh() {\n        this.onMetricsPanelRefresh();\n    }\n\n    getSort() {\n        return this.$window.sessionStorage.getItem(this.storeId + \"sort\");\n    }\n\n    setSort(type, field, rev) {\n        this.$window.sessionStorage.setItem(this.storeId + \"sort\", [type, field, rev].join(\":\"));\n    }\n\n    callSort() {\n        var sortSpec = this.getSort();\n        if (!sortSpec || sortSpec == \"\") {\n            return;\n        }\n        // Property, Type, Reverse?\n        var split = sortSpec.split(\":\");\n        this.reversedFields[split[0]] = split[2] == \"true\";\n        if (split[1] == \"status\") {\n            this.sortIncidentsByStatus(split[0], true);\n        }\n        if (split[1] == \"alpha\") {\n            this.sortIncidents(split[0], true);\n        }\n    }\n\n    onMetricsPanelRefresh() {\n        // ignore fetching data if another panel is in fullscreen\n        if (this.otherPanelInFullscreenMode()) { return; }\n        this.refreshData();\n    }\n\n    sortIncidents(property, noswap) {\n        this.incidentList = _.sortBy(this.incidentList, 'Id');\n        this.incidentList = _.sortBy(this.incidentList, property)\n        if (!noswap) {\n            this.reversedFields[property] = this.reversedFields[property] == false;\n        }\n        this.setSort(property, \"alpha\", this.reversedFields[property])\n        if (this.reversedFields[property] == true) {\n            this.incidentList.reverse();\n        }\n    }\n\n    sortIncidentsByStatus(property, noswap) {\n        this.incidentList = _.sortBy(this.incidentList, 'Id');\n        this.incidentList = _.sortBy(this.incidentList, (incident) => {\n            return statusMap[incident[property]];\n        });\n        if (!noswap) {\n            this.reversedFields[property] = this.reversedFields[property] == false;\n        }\n        this.setSort(property, \"status\", this.reversedFields[property])\n        if (this.reversedFields[property] == true) {\n            this.incidentList.reverse();\n        }\n    }\n\n    refreshData() {\n        var query = this.panel.query;\n        var that = this;\n        return this.datasourceSrv.get(this.panel.datasource)\n            .then(datasource => {\n                datasource.IncidentListQuery(query).then((data) => {\n                    data = _.each(data, (item) => {\n                        item.incidentLink = datasource.annotateUrl + \"/incident?id=\" + item.Id;\n                        item.bodyHTML = \"\";\n                        return item;\n                    })\n                    that.incidentList = data;\n                    that.callSort();\n                })\n            });\n    }\n\n    fmtTime(unixTS, relativeOnly) {\n        var m = moment.unix(unixTS);\n        var relative = '(' + m.fromNow() + ')'\n        if (relativeOnly) {\n            return relative;\n        }\n        return m.format('YYYY-MM-DD HH:mm:ss ') + relative;\n    }\n\n    statusClass(prefix, status) {\n        switch (status) {\n            case \"critical\": return prefix + \"error\";\n            case \"unknown\": return prefix + \"info\";\n            case \"warning\": return prefix + \"warning\";\n            case \"normal\": return prefix + \"success\";\n            default: return prefix + \"error\";\n        }\n    };\n\n    showActions(incident) {\n        var modalScope = this.$scope.$new();\n        modalScope.actions = incident.Actions;\n        this.$rootScope.appEvent('show-modal', {\n            src: \"public/plugins/bosun-app/panels/incident-list/modal_actions.html\",\n            scope: modalScope\n        });\n    }\n\n    showEvents(incident) {\n        var modalScope = this.$scope.$new();\n        modalScope.events = incident.Events.reverse();\n        this.$rootScope.appEvent('show-modal', {\n            src: \"public/plugins/bosun-app/panels/incident-list/modal_events.html\",\n            scope: modalScope\n        });\n    }\n\n    multiAction() {\n        if (!this.selectedMultiAction) {\n            return\n        }\n        var incidents = _.filter(this.incidentList, (incident) => {\n            return incident.selected == true;\n        })\n        if (incidents.length == 0) {\n            return\n        }\n        for (var i of incidents) {\n            if (this.selectedMultiAction == \"forget\") {\n                if (i.CurrentStatus != \"unknown\") {\n                    this.$rootScope.appEvent('alert-error', [\"Action Error\", 'can not forget an alert that is not currently unknown: ' + i.AlertName + i.TagsString])\n                    return\n                }\n            }\n            if (this.selectedMultiAction == \"close\") {\n                if (i.CurrentStatus != \"normal\") {\n                    this.$rootScope.appEvent('alert-error', [\"Action Error\", 'can not close an alert that is not currently normal: ' + i.AlertName + i.TagsString])\n                    return\n                }\n            }\n            if (this.selectedMultiAction == \"ack\") {\n                if (!i.NeedAck) {\n                    this.$rootScope.appEvent('alert-error', [\"Action Error\", 'can not ack an alert that is already acknowledged: ' + i.AlertName + i.TagsString])\n                    return\n                }\n            }\n        }\n        this.showActionForm(incidents, this.selectedMultiAction)\n    }\n\n    // incidents can be an incident, but also an [] of incidents    \n    showActionForm(incidents, action) {\n        if (!Array.isArray(incidents)) {\n            incidents = [incidents]\n        }\n        var modalScope = this.$scope.$new();\n        modalScope.incidents = incidents;\n        modalScope.action = action;\n        this.$rootScope.appEvent('show-modal', {\n            src: \"public/plugins/bosun-app/panels/incident-list/modal_action.html\",\n            scope: modalScope\n        });\n    }\n\n    submitActionForm(incidents, action) {\n        var self = this;\n        if (!this.actionForm) {\n            self.$rootScope.appEvent('alert-error', ['Action Error', 'must fill out form fields']);\n            return;\n        }\n        var actionForm = this.actionForm;\n        var actionRequest = {\n            Type: action,\n            User: actionForm.User || self.user.login,\n            Message: actionForm.Message,\n            Notify: actionForm.Notify == true,\n        }\n        if (actionRequest.Message == \"\" && actionRequest.Notify == true) {\n            self.$rootScope.appEvent('alert-error', ['Action Error', 'must fill out message field when notifying']);\n            return;\n        }\n        actionRequest.Keys = _.map(incidents, (incident) => {\n            return incident.AlertName + incident.TagsString;\n        });\n        this.datasourceSrv.get(this.panel.datasource).\n            then(datasource => {\n                datasource.submitAction(actionRequest).then(() =>\n                    self.refreshData().then(() => { self.actionForm.Message = \"\"; }) // clear message\n                )\n            })\n    }\n\n    showBody(incident) {\n        this.datasourceSrv.get(this.panel.datasource).\n            then(datasource => {\n                datasource.AlertBodyHTML(incident.AlertName + incident.TagsString).then(data => {\n                    var modalScope = this.$rootScope.$new();\n                    modalScope.bodyHTML = data;\n                    this.$rootScope.appEvent('show-modal', {\n                        src: \"public/plugins/bosun-app/panels/incident-list/modal_body.html\",\n                        scope: modalScope\n                    });\n                })\n            });\n    }\n\n    // Enable selecting a range of checkboxes with shift-click\n    selectRange($event, idx) {\n        if ($event.shiftKey && this.$scope.lastChecked != undefined) {\n            // This makes the selection \"flash\" and then get removed\n            // not sure of a good way to prevent it\n            document.getSelection().removeAllRanges();\n            var start = Math.min(idx, this.$scope.lastChecked);\n            var end = Math.max(idx, this.$scope.lastChecked);\n            for (var i = start; i <= end; i++) {\n                this.incidentList[i].selected = true;\n            }\n        }\n        this.$scope.lastChecked = idx;\n    }\n\n}\n\nBosunIncidentListCtrl.templateUrl = 'panels/incident-list/module.html';\n\nexport {\n    BosunIncidentListCtrl,\n    BosunIncidentListCtrl as PanelCtrl\n};\n"]}