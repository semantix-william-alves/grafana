{"version":3,"sources":["../../src/datasource/query_editor.js"],"names":["QueryCtrl","_","SnapQueryCtrl","$scope","$injector","uiSegmentSrv","removeMetricOption","newSegment","fake","value","target","taskName","taskId","metrics","interval","taskSegment","cssClass","metricSegments","map","item","namespace","push","newPlusButton","getTaskInfo","datasource","getTasks","then","taskMap","tasks","task","name","id","segment","getMetrics","elements","unshift","clone","index","splice","type","length","reduce","memo","deleteTask","html","taskNotFound","isRunning","createTask","getTask","task_state","isStopped","startTask","bind","panelCtrl","dataStream","stop","stopTask","start","templateUrl"],"mappings":"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","file":"query_editor.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\n\nimport _ from 'lodash';\n\nclass SnapQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, uiSegmentSrv) {\n    super($scope, $injector);\n\n    this.uiSegmentSrv = uiSegmentSrv;\n    this.removeMetricOption = this.uiSegmentSrv.newSegment({fake: true, value: '-- remove metric --'});\n\n    this.target.taskName = this.target.taskName || 'select task';\n    this.target.taskId = this.target.taskId || '';\n    this.target.metrics = this.target.metrics || [];\n    this.target.interval = this.target.interval || '1s';\n\n    this.taskSegment = this.uiSegmentSrv.newSegment({\n      value: this.target.taskName,\n      cssClass: \"tight-form-item-xxlarge\",\n    });\n\n    if (this.target.taskName === 'select task') {\n      this.taskSegment.fake = true;\n    }\n\n    this.metricSegments = this.target.metrics.map(item => {\n      return this.uiSegmentSrv.newSegment({value: item.namespace, cssClass: 'last'});\n    });\n\n    this.metricSegments.push(this.uiSegmentSrv.newPlusButton());\n    this.getTaskInfo();\n  }\n\n  getTasks() {\n    return this.datasource.getTasks().then(tasks => {\n      this.taskMap = {};\n\n      return tasks.map(task => {\n        this.taskMap[task.name] = task;\n\n        return this.uiSegmentSrv.newSegment({value: task.name});\n      });\n    });\n  }\n\n  taskChanged() {\n    var task = this.taskMap[this.taskSegment.value];\n    if (task) {\n      this.target.taskName = task.name;\n      this.target.taskId = task.id;\n      this.getTaskInfo();\n    } else {\n      this.target.taskId = '';\n      this.target.taskName = this.taskSegment.value;\n    }\n  }\n\n  getMetricSegments(segment) {\n    return this.datasource.getMetrics().then(metrics => {\n      var elements = metrics.map(item => {\n        return this.uiSegmentSrv.newSegment({value: item.value});\n      });\n\n      if (!segment.fake) {\n        elements.unshift(_.clone(this.removeMetricOption));\n      }\n\n      return elements;\n    });\n  }\n\n  metricSegmentChanged(segment, index) {\n    if (segment.value === this.removeMetricOption.value) {\n      this.metricSegments.splice(index, 1);\n    } else {\n      if (segment.type === 'plus-button') {\n        segment.type = '';\n      }\n\n      if ((index+1) === this.metricSegments.length) {\n        this.metricSegments.push(this.uiSegmentSrv.newPlusButton());\n      }\n    }\n\n    this.target.metrics = this.metricSegments.reduce((memo, item) => {\n      if (!item.fake) {\n        memo.push({namespace: item.value});\n      }\n      return memo;\n    }, []);\n  }\n\n  deleteTask() {\n    this.datasource.deleteTask(this.target.taskId).then(() =>  {\n      this.target.taskId = null;\n      this.target.taskName = \"\";\n      this.taskSegment.value = 'select task';\n      this.taskSegment.html = 'select task';\n      this.taskSegment.fake = true;\n      this.taskNotFound = true;\n      this.task = null;\n      this.isRunning = false;\n    });\n  }\n\n  createTask() {\n    this.datasource.createTask(this.target).then(task =>  {\n      this.target.taskId = task.id;\n      this.getTaskInfo();\n    });\n  }\n\n  getTaskInfo() {\n    if (!this.target.taskId) {\n      this.taskNotFound = true;\n      return;\n    }\n\n    this.datasource.getTask(this.target.taskId).then(task =>  {\n      if (!task) {\n        this.task = null;\n        this.target.taskId = '';\n        this.taskNotFound = true;\n        return;\n      }\n      this.taskNotFound = false;\n      this.task = task;\n      this.isRunning = task.task_state === 'Running';\n      this.isStopped = task.task_state === 'Stopped';\n    });\n  }\n\n  startTask() {\n    this.datasource.startTask(this.target.taskId)\n      .then(this.getTaskInfo.bind(this));\n  }\n\n  stopTask() {\n    this.panelCtrl.dataStream.stop();\n    this.datasource.stopTask(this.target.taskId)\n      .then(this.getTaskInfo.bind(this));\n  }\n\n  watchTask() {\n    this.panelCtrl.dataStream.start();\n  }\n}\n\nSnapQueryCtrl.templateUrl = 'datasource/query_editor.html';\nexport {SnapQueryCtrl};\n"]}