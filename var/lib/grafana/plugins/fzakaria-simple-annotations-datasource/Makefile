# Makefile for building Typescript project
# Inspiration for this Makefile comes from
# https://gist.github.com/hallettj/29b8e7815b264c88a0a0ee9dcddb6210

.PHONY: all test build clean package

NPM_BIN = $(shell npm bin)

# Identify modules to be compiled by their suffix
src_files := $(shell find . -name '*.ts' -not -path './node_modules/*')

# Build list of expected output files by changing `.ts` to `.js` in
out_files := $(patsubst %.ts,%.js,$(src_files))

# We also want to build a list of `.js.map` output files, so that we can remove
# them in the `clean` target.
map_files := $(patsubst %.ts,%.js.map,$(src_files))

# The typescript compiler
tsc := ./node_modules/typescript/bin/tsc

# The typescript linter
tslint := ./node_modules/tslint/bin/tslint

all: build

lint:
	$(tslint) src/**/*.ts

build: node_modules
	npm run build

package: build
	@mkdir -p dist
	@mkdir -p dist/img dist/partials
	@cp module.js dist/module.js
	@cp partials/* dist/partials
	@cp img/* dist/img
	@cp README.md dist
	@cp LICENSE dist
	@cp plugin.json dist

test: build
	$(NPM_BIN)/jasmine JASMINE_CONFIG_PATH=jasmine.conf.json

# When cleaning, remove files generated by the `build` target, and nothing else.
clean:
	rm -rf $(out_files) $(map_files) dist

# This rule informs `make` that the `node_modules/` directory is out-of-date
# after changes to `package.json`, and instructs `make` on how to install
# modules to get back up-to-date.
node_modules: package.json
	npm install
