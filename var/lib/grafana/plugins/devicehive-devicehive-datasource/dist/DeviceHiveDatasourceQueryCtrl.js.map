{"version":3,"sources":["../src/DeviceHiveDatasourceQueryCtrl.js"],"names":["QueryCtrl","ConverterManager","converterManager","DeviceHiveDatasourceQueryCtrl","$scope","$injector","uiSegmentSrv","me","target","type","label","refId","name","dataPath","converters","showHelp","converterName","push","argValues","getConverterDefaultValuesObject","index","splice","panelCtrl","refresh","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAESA,qB,kBAAAA,S;;AACFC,4B;;;;;;;;;;;;;;;;;;;;;AAEDC,4B,GAAmB,IAAID,gBAAJ,E;;AAQnBE,yC;;;AAEF;;;;;;;AAOA,uDAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,YAA/B,EAA6C;AAAA;;AAAA,8KACnCF,MADmC,EAC3BC,SAD2B;;AAGzC,wBAAME,UAAN;;AAEAA,uBAAGC,MAAH,CAAUA,MAAV,GAAmBD,GAAGC,MAAH,CAAUA,MAAV,mBAAnB;AACAD,uBAAGC,MAAH,CAAUC,IAAV,GAAiBF,GAAGC,MAAH,CAAUC,IAAV,kBAAjB;AACAF,uBAAGC,MAAH,CAAUA,MAAV,GAAmBD,GAAGC,MAAH,CAAUE,KAAV,SAAsBH,GAAGC,MAAH,CAAUC,IAAhC,GAAuCF,GAAGC,MAAH,CAAUG,KAApE;AACAJ,uBAAGC,MAAH,CAAUI,IAAV,GAAiBL,GAAGC,MAAH,CAAUI,IAAV,MAAjB;AACAL,uBAAGC,MAAH,CAAUK,QAAV,GAAqBN,GAAGC,MAAH,CAAUK,QAAV,MAArB;AACAN,uBAAGC,MAAH,CAAUM,UAAV,GAAuBP,GAAGC,MAAH,CAAUM,UAAV,IAAwB,EAA/C;;AAEAP,uBAAGQ,QAAH,GAAc,KAAd;AAZyC;AAa5C;;AAED;;;;;;;;mDAIeC,a,EAAe;AAC1B,4BAAMT,KAAK,IAAX;;AAEAA,2BAAGC,MAAH,CAAUM,UAAV,CAAqBG,IAArB,CAA0B;AACtBL,kCAAMI,aADgB;AAEtBE,uCAAWhB,iBAAiBiB,+BAAjB,CAAiDH,aAAjD;AAFW,yBAA1B;AAIH;;;sDAMiBI,K,EAAO;AACrB,4BAAMb,KAAK,IAAX;;AAEAA,2BAAGC,MAAH,CAAUM,UAAV,CAAqBO,MAArB,CAA4BD,KAA5B,EAAmC,CAAnC;AACH;;;uDAMkB;AACf,4BAAMb,KAAK,IAAX;;AAEAA,2BAAGe,SAAH,CAAaC,OAAb;AACH;;;;cAvDuCvB,S;;AA0D5CG,0CAA8BqB,WAA9B;;+BAGerB,6B","file":"DeviceHiveDatasourceQueryCtrl.js","sourcesContent":["import './css/query-editor.css!';\r\nimport './DeviceHiveDirectives.js';\r\nimport { QueryCtrl } from 'app/plugins/sdk';\r\nimport ConverterManager from './ConverterManager.js';\r\n\r\nconst converterManager = new ConverterManager();\r\n\r\n\r\n/**\r\n * DeviceHive datasource QueryCtrl.\r\n * A JavaScript class that will be instantiated and treated as an Angular controller\r\n * when the user edits metrics in a panel. This class has to inherit from the app/plugins/sdk.QueryCtrl class.\r\n */\r\nclass DeviceHiveDatasourceQueryCtrl extends QueryCtrl {\r\n\r\n    /**\r\n     * Creates an instance of DeviceHiveDatasourceQueryCtrl.\r\n     * @param {any} $scope\r\n     * @param {any} $injector\r\n     * @param {any} uiSegmentSrv\r\n     * @memberof DeviceHiveDatasourceQueryCtrl\r\n     */\r\n    constructor($scope, $injector, uiSegmentSrv) {\r\n        super($scope, $injector);\r\n\r\n        const me = this;\r\n\r\n        me.target.target = me.target.target || `select metric`;\r\n        me.target.type = me.target.type || `notification`;\r\n        me.target.target = me.target.label || `${me.target.type}${me.target.refId}`;\r\n        me.target.name = me.target.name || ``;\r\n        me.target.dataPath = me.target.dataPath || ``;\r\n        me.target.converters = me.target.converters || [];\r\n\r\n        me.showHelp = false;\r\n    }\r\n\r\n    /**\r\n     * Add converter handler\r\n     * @param converterName\r\n     */\r\n    onAddConverter(converterName) {\r\n        const me = this;\r\n\r\n        me.target.converters.push({\r\n            name: converterName,\r\n            argValues: converterManager.getConverterDefaultValuesObject(converterName)\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Delete converter handler\r\n     * @param index\r\n     */\r\n    onDeleteConverter(index) {\r\n        const me = this;\r\n\r\n        me.target.converters.splice(index, 1);\r\n    }\r\n\r\n    /**\r\n     * Refresh data every time query params change.\r\n     * @memberof DeviceHiveDatasourceQueryCtrl\r\n     */\r\n    onChangeInternal() {\r\n        const me = this;\r\n\r\n        me.panelCtrl.refresh();\r\n    }\r\n}\r\n\r\nDeviceHiveDatasourceQueryCtrl.templateUrl = `partials/query.editor.html`;\r\n\r\n\r\nexport default DeviceHiveDatasourceQueryCtrl;"]}